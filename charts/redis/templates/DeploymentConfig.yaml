{{- if .Values.enabled }}
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    {{- include "redis.labels" . | nindent 4 }}
  name: {{ include "redis.fullname" . }}
spec:
  replicas: 1
  selector:
    {{- include "redis.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "redis.selectorLabels" . | nindent 10 }}
    spec:
      containers:
        - name: {{ include "redis.name" . }}
          env:
            - name: REDIS_HOST
              value: {{ include "redis.fullname" . }}
            - name: REDIS_PORT
              value: "{{ .Values.service.port }}"
            - name: REDIS_PASSWORD
              value: "{{ .Values.redis_password }}"
            - name: REDIS_DB
              value: "{{ .Values.db_name }}"
            - name: REDIS_CACHE_EXPIRY
              value: "{{ .Values.expiry }}"
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: {{ .Values.service.port | default "6379" }}
            timeoutSeconds: 1
          ports:
            - containerPort: {{ .Values.service.port  | default "6379" }}
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -i
                - -c
                - redis-server --requirepass $REDIS_PASSWORD
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
            - mountPath: /var/lib/redis/data
              name: {{ template "redis.name" . }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
      {{- if .Values.persistent }}
        - name: {{ template "redis.name" . }}
          persistentVolumeClaim:
            claimName: {{ template "redis.fullname" . }}
      {{- else }}
        - name: {{ template "redis.name" . }}
          emptyDir: {}
      {{- end }}
  triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
          - redis
        from:
          kind: ImageStreamTag
          name: {{ .Values.redis_version | quote }}
          namespace: openshift
      type: ImageChange
{{- end }}