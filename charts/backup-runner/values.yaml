---
enabled: true
maxruntime: 300
envVars:
  - name: POSTGRESQL_USER
    value: "sso"
  - name: POSTGRESQL_DATABASE
    value: "sso"
  - name: POSTGRESQL_SVC_HOSTNAME
    value: "sso-postgresql"
  - name: PGPASSWORD
    value: "123456"
  - name: BACKUP_NAME
    value: "keycloak-db"
  - name: STORAGE_CONN_STR
    valueFrom:
      secretKeyRef:
        name: azure-storage-account-conn-string 
        key: connection_string
  - name: STORAGE_CONTAINER_NAME
    valueFrom:
      secretKeyRef:
        name: azure-storage-container 
        key: container_name
  - name: ENCRYPT_PASSWORD
    valueFrom:
      secretKeyRef:
       name: backup-encryption
       key: password

resources:
  request:
    cpu: 100m
    memory: 50Mi
  limits:
    cpu: "1"
    memory: 512Mi
schedule: '0 3 * * *'

buildconfig:
  source:
    contextDir: "charts/backup-runner/container_build"
    git:
      uri: "https://github.com/WHOAcademy/helm-charts.git"  
      ref: master
    type: Git
  strategy:
    type: docker
    dockerStrategy: {}

# To enable sealed secrets follow the instructions in UJ / docs / sealed-secrets.md
sealed_secret:
  name: backup-encryption
  encryptedData:
    password: AgArim/f1O22yHAmJCap2KaHPMzjH3CxjcmeLZNeZ0yAn4vovCIBHjBqF9mMJz2zlpO60IODh7aQX4FD2vMDkFsFLxBdL0eWHfoDHZQuT1T8bYxyuocAkIX3G2KWaNfV7qpmG3tVELX3Fkqyemecof9jZ+rb2gDfMbNSTo4faaOR9E4KJPH9pBaOrc82n+rVWYCUBem1LghlpC9mAKuty72lc5gobWPrishlndZbAwc0pQ3ASM0WeHhxmBYC5330mGBvHU5Zv/cGRtP7LwVMIEkSkIDLvvUUG1iZf+qQEykGldPv4+Sx2PFuLPY0TUV8WB8nZC6+yFwCUHI8n1c4wUWTYgaG7H3ZoQifpknIQteMc64g1An/GdRmjEYHIrL3/fj/j2WTEn3E3erzzyUcvz9+/Iso/x5daIg0wq34p3yjbmcmnGgq6Qbk8Ly90Oe33GqON+xndZUpP+w3eOXeqtsRUwqlLOyjH8IzKy4beUGEhKWW5/EJDKM+fsbBh8FTYNmeauMsbK5DdhclQxLmp66nO5bgQirUOAw+noda0NPT6XzUlmnzw+LwUIQRherWyN1lY8WB1sS6jy3HYfuvIlwQQ31MHg/fJG0WmHlmp7VxJKpY4A5Gjt1Pfxt0FFctWeu5cF9/B6dUMO2n0U/j2skWcWVR1uz6JDDsr8npdlTOTwu0KBw3vnQxHnGSY+tFaU3NuxrjlYc3PrIvHxX7jnwSLIScMg==

scripts:
  backup.sh: |
    #!/bin/bash
    set -e
    DATESTAMP=$(date +%d-%m-%Y)

    pg_dump -U $POSTGRESQL_USER -d $POSTGRESQL_DATABASE -h $POSTGRESQL_SVC_HOSTNAME > /tmp/${BACKUP_NAME}.sql

    gzip -N -9 /tmp/${BACKUP_NAME}.sql

    7za a /tmp/${BACKUP_NAME}_${DATESTAMP}.sql.gz.7z /tmp/${BACKUP_NAME}.sql.gz -p"${ENCRYPT_PASSWORD}" 

    export SOURCE_FILE="/tmp/${BACKUP_NAME}_${DATESTAMP}.sql.gz.aes256cbc"

    python /opt/backup/upload-blob.py
  create-container.py: |
    import os

    from azure.storage.blob import ContainerClient


    container_client = ContainerClient.from_connection_string(conn_str=os.getenv('STORAGE_CONN_STR'),
                                                              container_name=os.getenv('STORAGE_CONTAINER_NAME'))

    container_client.create_container()
  upload-blob.py: |
    import os

    from azure.storage.blob import BlobClient

    source_file=os.getenv('SOURCE_FILE')
    blob = BlobClient.from_connection_string(conn_str=os.getenv('STORAGE_CONN_STR'),
                                             container_name=os.getenv('STORAGE_CONTAINER_NAME'),
                                             blob_name=source_file)

    with open(source_file, "rb") as data:
        blob.upload_blob(data)
