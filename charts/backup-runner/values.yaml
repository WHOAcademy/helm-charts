---
enabled: true
maxruntime: 300
envVars:
  - name: POSTGRESQL_USER
    value: "sso"
  - name: POSTGRESQL_DATABASE
    value: "sso"
  - name: POSTGRESQL_SVC_HOSTNAME
    value: "sso-postgresql"
  - name: PGPASSWORD
    value: "123456"
  - name: BACKUP_NAME
    value: "keycloak-db"
  - name: STORAGE_CONN_STR
    valueFrom:
      secretKeyRef:
        name: backup-encryption
        key: connection_string
  - name: STORAGE_CONTAINER_NAME
    valueFrom:
      secretKeyRef:
        name: backup-encryption
        key: container_name
  - name: ENCRYPT_PASSWORD
    valueFrom:
      secretKeyRef:
        name: backup-encryption
        key: password

resources:
  request:
    cpu: 100m
    memory: 50Mi
  limits:
    cpu: "1"
    memory: 512Mi
schedule: '0 3 * * *'

buildconfig:
  source:
    contextDir: "charts/backup-runner/container_build"
    git:
      uri: "https://github.com/WHOAcademy/helm-charts.git"
      ref: master
    type: Git
  strategy:
    type: docker
    dockerStrategy: {}

# To enable sealed secrets follow the instructions in UJ / docs / sealed-secrets.md
sealed_secrets:
  - name: backup-encryption
    encryptedData:
      connection_string: AgC4bR+qMrGSfgkLr9VKSQ3TzIxyGhfLE/4XQ16sdcjeLUxWLQkpTaJX3eE8MJ1mbWXUqYu+iTgVojqwzIzQWA4lZg72rWNdYFrQgAkq8UXQGgFKe0gROeqGmZpI1x279Enpvseq9uPB3VvRZH8FWlg1SCtcM2BnH/x7ABW8oKs8P3M2R0Kh8i8z3JmedOdhHompcpWfDFNajzyClIOXSMDGCICjI87Vx/JWanu+qdA9Gb3LGv1HRBLfjwS4lKVNLt1F7TLNZdV/GuLcVgT0gh5jpn4DwCYygl9eYqybVB/Q0Kq6n7yAryBisCkaRXPUhDO5muXRTsOWzQYAmBjTG9uP++a9ONTTyJUpufqkVU0I37Tl/SbRas0tJ0CpDNQ8wp220X8Y5LYjNRsThGBDcxbNeksSZuNCuPvhhO9xAedO8ggx27byvCQ33X2NGMXOcN/SR7Mzl2UuXRmZJQa8WrOm6r6jr+e9AQsPY8V7aqdBdqx0SIhWFuuFtCfM3B9VHqwqaaZD8S3IKFcU+YPtTADXmMpTGFbib2APqGeccrqHJxht2HfzFz4MoaJFEasC6Hio9gZ1prlUh0Rj6VELuszgKRzs1mjqvwQLA2jSumQDBE0AQUktZq5IY7Eqn/PoP8qL92F9cI97oFlouUCju4u/1Ro+Zu9CjJSYfeWQbGc3roZStzYqWMz027TioRsUutZ2f2CrVvaUz7UDi8lh7jXqGxRS65rmJX3xsZx78qxQzIX+9XVv07eb5fVh2cfJSMbjTRpVLBjsQqe/FmcPmeEEar5hhXo3qtdZARJf+Fv2BC/MTqX3ToYXNzxbd6EkueLQT1oquigVJsh7zppsuR0/hI3gMQeUR3o6n6cSekO1CYPU2FmD1MUh+m7cwDKsQj1HDbEZIr8p6yWCsQsG5VMu/PxwD9LZ+/45lVSCBfEXf8AaszsTMYsQ5hc=
      container_name: AgCO0HMtVW+AKi909nJP0n1dY6G9cJEcW/l+GIrlLGeyafn2I08g9Aj7suDJPsHlTPaiRg5UWn+ZwbwNCvCK2WIj5Vn1ePdLQFn8Y4L/tY1usSG6kT0/KlPm9uKdaBYCYbx3r6s81d3t0vUjTuQM/5jMhYwa/RaiMXtx2Noli9McMOrfciCYhnutlpeHPrh5ByGS+Ub+sv+HPlJGv7WUPQY0ZWLpp1avtdNj3+mCvs3woVHKg5O+TcohxJRHFDqoQHB/qME3BC5oiceE1x+dMbnS+dfTPhq9lSWbX/SGijCn2NDQYBvyXY5U6dK/AVNcdbIc82iaDGBvn72/3WKNuoouUyXskWhwYD03lABiygSeYOTJ/XJSMj/5vI9jipjYtf8ER8wIqbwtvIQuBHZroNd7xeTES6JkFMwjyBC6EE2SZlV7taOEFOFTK1I0V9grd6CKkfR2/gLeMJQS7WrIUisa0D+uKITMjr7It1x065C5AIBrGiC9Xu/lvHsWg5SrizJTGJEpEeUr6JzW6BtAOqHE962jefdLEYVAHpAKN3xNz24HukcWT5CcbCqP60JD6eeiCHPZf7bbLiq0flicHqUiIHBBDqAeGt2iE4F2+2xK4aKQdUy2Wt3Zbh91xZYJLwYtXBFjbVO1zLgLtK44ar+QOXMQEtutNJiq++iGn963SAjqRtJZLHAsEd/FRUQ6Phb+w1JBxbUfbsJA7DyaU10RBO/T
      password: AgAuWou9D7Z0N1Doz1bXFsEc5ajjek7CzAWXE7S4HaOauXLIX0TnsCUhTEleeEobYotvXw4/qzM0kU7aHtpqYtpefG29/eawdgNVSvStBIQPqx+NusiW6YlN4P//eiqr2uLFu9lDnQgjnhuH9eIHZ/ECwg6DJ/K7z2n09irs3q7nQNA7jNXd79xNFBytShQHRr4QTncmvMHaz7SMjpmo1AqqeEmkVVVRzTPrKQXMOaaSZH+Dwo07LBAbV+cJLM0YfAp2D6ldZODSI3XHbkhnFWjLgg4CSxgeuyShDh7tkiihvbOJ5MjMs9RXPB3TO45TE3AKDcU3TzvJ+WdFBHEP0Wwk6hUXUS+fXcRXF/rkCP+Tc8GFNmiEHXxXhLyflLo5lpmC/ogw5XAFdFOYGvZySSH0e5tvdp3poPphc0nIqP9knzVq5WSqJ4rvIjUmUTYWHsIfJUBixECqoSycRlmBOfHy3QLB1vjrfAVVHBc5aL3a1q2TtgvM80FDEN0ZfJu7IeWwij/TMO858JIPH8n/hY5nI0EKXEOcB808KxEN7K+cbi8waJtXPGmWQTAx+VRquPlzos+1+qmDN+p+MWnJV5al77l+gEJxWcsH09WmxNC2xWeX5xa1YdWGAuUnLstcBNuVLbdz2fv6tZ8rqpbU6/RjtXQ3kohwWstqo4FB2LoygswtCnoxeo4vDpphhASseEtrkbvanvx4AqwWNTOdnhSS

scripts:
  backup.sh: |
    #!/bin/bash
    set -e
    DATESTAMP=$(date +%d-%m-%Y)

    pg_dump -U $POSTGRESQL_USER -d $POSTGRESQL_DATABASE -h $POSTGRESQL_SVC_HOSTNAME > /tmp/${BACKUP_NAME}.sql

    gzip -N -9 /tmp/${BACKUP_NAME}.sql

    7za a /tmp/${BACKUP_NAME}_${DATESTAMP}.sql.gz.7z /tmp/${BACKUP_NAME}.sql.gz -p"${ENCRYPT_PASSWORD}"

    export SOURCE_FILE="/tmp/${BACKUP_NAME}_${DATESTAMP}.sql.gz.7z"

    python3 /opt/backup/upload-blob.py
  create-container.py: |
    import os

    from azure.storage.blob import ContainerClient


    container_client = ContainerClient.from_connection_string(conn_str=os.getenv('STORAGE_CONN_STR'),
                                                              container_name=os.getenv('STORAGE_CONTAINER_NAME'))

    container_client.create_container()
  upload-blob.py: |
    import os

    from azure.storage.blob import BlobClient

    source_file=os.getenv('SOURCE_FILE')
    blob = BlobClient.from_connection_string(conn_str=os.getenv('STORAGE_CONN_STR'),
                                             container_name=os.getenv('STORAGE_CONTAINER_NAME'),
                                             blob_name=source_file)

    with open(source_file, "rb") as data:
        blob.upload_blob(data)
